<Application
    x:Class="wcheck.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:wcheck"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- primary color -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary>
                    <!-- include your primary palette -->
                    <!--
                            include three hues from the primary palette (and the associated forecolours).
                            Do not rename, keep in sequence; light to dark.
                        -->
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#323232"/>
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="White"/>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#323232"/>
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="White"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="#1f1f1f"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="White"/>
                </ResourceDictionary>
                <ResourceDictionary Source="Styles/ScrollBarStyle.xaml"/>
                <ResourceDictionary Source="Styles/ExpanderStyle.xaml"/>
                <ResourceDictionary Source="Styles/TextBoxStyle.xaml"/>
                <ResourceDictionary Source="Styles/CheckBoxStyle.xaml"/>
                <ResourceDictionary Source="Styles/ComboBoxStyle.xaml"/>
                <!-- Include the Dragablz Material Design style -->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- tell Dragablz tab control to use the Material Design theme -->
            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" />
        <local:WindowStateToPathConverter x:Key="windowstateToPathConverter" />
        <local:WindowStateToThicknessConverter x:Key="windowstateToThicknessConverter" />
        <local:CaptionHeightConverter x:Key="captionHeightConverter" />

        <SolidColorBrush x:Key="TitleBarBackground" Color="#1f1f1f" />
        <sys:Double x:Key="TitleBarHeight">20</sys:Double>
        <sys:Double x:Key="TitleBarButtonWidth">20</sys:Double>
        <sys:Double x:Key="TitleBarButtonHeight">20</sys:Double>

        <SolidColorBrush x:Key="TitleBarButtonBackground" Color="Transparent" />
        <SolidColorBrush x:Key="TitleBarButtonForeground" Color="White" />
        <SolidColorBrush x:Key="TitleBarButtonHoverBackground" Color="#323232" />
        <SolidColorBrush x:Key="TitleBarButtonHoverForeground" Color="White" />
        <SolidColorBrush x:Key="TitleBarButtonPressedBackground" Color="#262626" />
        <SolidColorBrush x:Key="TitleBarButtonPressedForeground" Color="White" />

        <SolidColorBrush x:Key="TitleBarCloseButtonBackground" Color="Transparent" />
        <SolidColorBrush x:Key="TitleBarCloseButtonForeground" Color="White" />
        <SolidColorBrush x:Key="TitleBarCloseButtonHoverBackground" Color="#ff5757" />
        <SolidColorBrush x:Key="TitleBarCloseButtonHoverForeground" Color="White" />
        <SolidColorBrush x:Key="TitleBarCloseButtonPressedBackground" Color="#fd3838" />
        <SolidColorBrush x:Key="TitleBarCloseButtonPressedForeground" Color="White" />

        <SolidColorBrush x:Key="PrimaryForeground" Color="#fca577" />
        <Color x:Key="PrimaryForegroundColor">#fca577</Color>

            

            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource TitleBarButtonBackground}" />
            <Setter Property="Foreground" Value="{StaticResource TitleBarButtonForeground}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Width" Value="{StaticResource TitleBarButtonWidth}" />
            <Setter Property="Height" Value="{StaticResource TitleBarButtonHeight}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButtonHoverBackground}" />
                                <Setter Property="Foreground" Value="{StaticResource TitleBarButtonHoverForeground}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarButtonPressedBackground}" />
                                <Setter Property="Foreground" Value="{StaticResource TitleBarButtonPressedForeground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

            <Style
            x:Key="TitleBarCloseButtonStyle"
            BasedOn="{StaticResource TitleBarButtonStyle}"
            TargetType="Button">
                <Setter Property="Background" Value="{StaticResource TitleBarCloseButtonBackground}" />
                <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonForeground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">
                                <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Focusable="False"
                                RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarCloseButtonHoverBackground}" />
                                    <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonHoverForeground}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource TitleBarCloseButtonPressedBackground}" />
                                    <Setter Property="Foreground" Value="{StaticResource TitleBarCloseButtonPressedForeground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
        </ResourceDictionary>
    </Application.Resources>
</Application>
